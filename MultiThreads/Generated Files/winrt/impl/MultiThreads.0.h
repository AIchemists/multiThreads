// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.200917.4

#ifndef WINRT_MultiThreads_0_H
#define WINRT_MultiThreads_0_H
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Markup
{
    struct IXamlMetadataProvider;
}
WINRT_EXPORT namespace winrt::MultiThreads
{
    struct IMainPage;
    struct MainPage;
    struct XamlMetaDataProvider;
}
namespace winrt::impl
{
    template <> struct category<MultiThreads::IMainPage>{ using type = interface_category; };
    template <> struct category<MultiThreads::MainPage>{ using type = class_category; };
    template <> struct category<MultiThreads::XamlMetaDataProvider>{ using type = class_category; };
    template <> inline constexpr auto& name_v<MultiThreads::MainPage> = L"MultiThreads.MainPage";
    template <> inline constexpr auto& name_v<MultiThreads::XamlMetaDataProvider> = L"MultiThreads.XamlMetaDataProvider";
    template <> inline constexpr auto& name_v<MultiThreads::IMainPage> = L"MultiThreads.IMainPage";
    template <> inline constexpr guid guid_v<MultiThreads::IMainPage>{ 0xC3E1B8A1,0x81E8,0x5C75,{ 0xA7,0x69,0xA7,0x67,0x46,0x63,0x2A,0x9B } }; // C3E1B8A1-81E8-5C75-A769-A76746632A9B
    template <> struct default_interface<MultiThreads::MainPage>{ using type = MultiThreads::IMainPage; };
    template <> struct default_interface<MultiThreads::XamlMetaDataProvider>{ using type = Windows::UI::Xaml::Markup::IXamlMetadataProvider; };
    template <> struct abi<MultiThreads::IMainPage>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_MyProperty(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_MyProperty(int32_t) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_MultiThreads_IMainPage
    {
        [[nodiscard]] WINRT_IMPL_AUTO(int32_t) MyProperty() const;
        WINRT_IMPL_AUTO(void) MyProperty(int32_t value) const;
    };
    template <> struct consume<MultiThreads::IMainPage>
    {
        template <typename D> using type = consume_MultiThreads_IMainPage<D>;
    };
}
#endif
